name: Build RustDesk (All Desktop + Android)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

env:
  RENDEZVOUS_SERVER: ${{ secrets.RENDEZVOUS_SERVER }}
  RS_PUB_KEY: ${{ secrets.RS_PUB_KEY }}

jobs:
  linux:
    name: Linux (x64) - Flutter
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - uses: dtolnay/rust-toolchain@stable

      - uses: subosito/flutter-action@v2
        with: { channel: stable }
      - run: |
          flutter --version
          flutter config --enable-linux-desktop

      - name: Install build deps (Linux + GStreamer + libunwind)
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y universe
          sudo apt-get update
          # fix unmet dependency first
          sudo apt-get install -y libunwind-dev || sudo apt-get install -y libunwind-14-dev
          # rest
          sudo apt-get install -y \
            libgtk-3-dev libayatana-appindicator3-dev \
            libwebkit2gtk-4.0-dev librsvg2-dev \
            gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            cmake ninja-build pkg-config curl unzip \
            protobuf-compiler python3
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV

      - run: cd flutter && flutter pub get

      # Per developer docs: FRB 1.x CLI usage
      - run: cargo install flutter_rust_bridge_codegen --locked --version 1.80.1
      - run: |
          flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart

      - run: python3 ./build.py --flutter

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-linux-custom
          path: |
            ./rustdesk*
            ./flutter/build/linux/**

  windows:
    name: Windows (x64) - Flutter + vcpkg static
    runs-on: windows-latest
    env:
      VCPKG_ROOT: ${{ github.workspace }}\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows-static
      VCPKG_TARGET_TRIPLET: x64-windows-static
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: subosito/flutter-action@v2
        with: { channel: stable }
      - shell: pwsh
        run: |
          flutter --version
          flutter config --enable-windows-desktop

      - name: Install build deps (Windows)
        run: choco install -y git cmake ninja protoc python

      - name: Setup vcpkg (static)
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg "$env:GITHUB_WORKSPACE\vcpkg"
          & "$env:GITHUB_WORKSPACE\vcpkg\bootstrap-vcpkg.bat"
          echo "VCPKG_ROOT=$env:GITHUB_WORKSPACE\vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "VCPKG_TARGET_TRIPLET=x64-windows-static"  | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install vcpkg packages (static)
        shell: pwsh
        run: |
          & "$env:GITHUB_WORKSPACE\vcpkg\vcpkg.exe" install `
            opus:x64-windows-static `
            libvpx:x64-windows-static `
            libyuv:x64-windows-static `
            aom:x64-windows-static
          & "$env:GITHUB_WORKSPACE\vcpkg\vcpkg.exe" list

      - run: cargo install flutter_rust_bridge_codegen --locked --version 1.80.1
      - shell: bash
        run: |
          flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart

      - shell: pwsh
        run: cd flutter; flutter pub get

      - run: python ./build.py --flutter

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-custom
          path: |
            .\rustdesk*.exe
            .\flutter\build\windows\**\*

  macos-intel:
    name: macOS (Intel, x64) - Flutter + vcpkg opus
    runs-on: macos-13
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.14"
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-osx
      VCPKG_TARGET_TRIPLET: x64-osx
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - uses: dtolnay/rust-toolchain@stable

      - uses: subosito/flutter-action@v2
        with: { channel: stable }
      - run: |
          flutter --version
          flutter config --enable-macos-desktop

      - run: |
          brew update
          brew install cmake ninja protobuf
          sudo gem install cocoapods --no-document

      - name: Setup vcpkg + opus (x64-osx)
        run: |
          git clone https://github.com/microsoft/vcpkg "$GITHUB_WORKSPACE/vcpkg"
          "$GITHUB_WORKSPACE/vcpkg/bootstrap-vcpkg.sh"
          echo "VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg" >> $GITHUB_ENV
          echo "VCPKG_DEFAULT_TRIPLET=x64-osx"      >> $GITHUB_ENV
          echo "VCPKG_TARGET_TRIPLET=x64-osx"       >> $GITHUB_ENV
          "$GITHUB_WORKSPACE/vcpkg/vcpkg" install opus:x64-osx
          "$GITHUB_WORKSPACE/vcpkg/vcpkg" list

      - run: cargo install flutter_rust_bridge_codegen --locked --version 1.80.1
      - run: |
          flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart

      - run: cd flutter && flutter pub get
      - run: python3 ./build.py --flutter

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-macos-x64-custom
          path: |
            ./flutter/build/macos/**/*
            ./rustdesk*.dmg
            ./rustdesk*.zip

  macos-apple:
    name: macOS (Apple Silicon, arm64) - Flutter + brew opus
    runs-on: macos-14
    env:
      MACOSX_DEPLOYMENT_TARGET: "10.14"
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - uses: dtolnay/rust-toolchain@stable

      - uses: subosito/flutter-action@v2
        with: { channel: stable }
      - run: |
          flutter --version
          flutter config --enable-macos-desktop

      - run: |
          brew update
          brew install cmake ninja protobuf opus
          sudo gem install cocoapods --no-document

      - run: cargo install flutter_rust_bridge_codegen --locked --version 1.80.1
      - run: |
          flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart

      - run: cd flutter && flutter pub get
      - run: python3 ./build.py --flutter

      - uses: actions/upload-artifact@v4
        with:
          name: rustdesk-macos-arm64-custom
          path: |
            ./flutter/build/macos/**/*
            ./rustdesk*.dmg
            ./rustdesk*.zip

  android:
    name: Android (APK) - Flutter
    runs-on: ubuntu-22.04
    continue-on-error: true   # plugin 'external_path' in your repo is not compatible; desktop builds will still succeed
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - uses: dtolnay/rust-toolchain@stable

      - uses: subosito/flutter-action@v2
        with: { channel: stable }

      - run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler python3

      - run: cd flutter && flutter pub get

      - run: cargo install flutter_rust_bridge_codegen --locked --version 1.80.1
      - run: |
          flutter_rust_bridge_codegen \
            --rust-input ./src/flutter_ffi.rs \
            --dart-output ./flutter/lib/generated_bridge.dart

      - run: yes | "${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" --licenses

      - run: |
          cd flutter
          flutter build apk --release

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: rustdesk-android-apk-custom
          path: flutter/build/app/outputs/flutter-apk/app-release.apk
